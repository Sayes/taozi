{
  "version": 3,
  "sources": ["../../vue/dist/vue.esm-bundler.js"],
  "sourcesContent": ["import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError: (process.env.NODE_ENV !== 'production') ? onError : undefined,\r\n        onWarn: (process.env.NODE_ENV !== 'production') ? e => onError(e, true) : NOOP\r\n    }, options));\r\n    function onError(err, asWarning = false) {\r\n        const message = asWarning\r\n            ? err.message\r\n            : `Template compilation error: ${err.message}`;\r\n        const codeFrame = err.loc &&\r\n            generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n        warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n    }\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,mBAAmB;AACf;AACI,wBAAoB;AAAA,EACxB;AACJ;AAGA,IAAK,MAAwC;AACzC,UAAQ;AACZ;AACA,IAAM,eAAe,uBAAO,OAAO,IAAI;AACvC,2BAA2B,UAAU,SAAS;AAC1C,MAAI,CAAC,SAAS,QAAQ,GAAG;AACrB,QAAI,SAAS,UAAU;AACnB,iBAAW,SAAS;AAAA,IACxB,OACK;AACD,MAA2C,KAAK,6BAA6B,QAAQ;AACrF,aAAO;AAAA,IACX;AAAA,EACJ;AACA,QAAM,MAAM;AACZ,QAAM,SAAS,aAAa;AAC5B,MAAI,QAAQ;AACR,WAAO;AAAA,EACX;AACA,MAAI,SAAS,OAAO,KAAK;AACrB,UAAM,KAAK,SAAS,cAAc,QAAQ;AAC1C,QAA+C,CAAC,IAAI;AAChD,WAAK,2CAA2C,UAAU;AAAA,IAC9D;AAKA,eAAW,KAAK,GAAG,YAAY;AAAA,EACnC;AACA,QAAM,EAAE,SAAS,QAAQ,UAAU,OAAO;AAAA,IACtC,aAAa;AAAA,IACb,SAAU,OAAyC,UAAU;AAAA,IAC7D,QAAS,OAAyC,OAAK,QAAQ,GAAG,IAAI,IAAI;AAAA,EAC9E,GAAG,OAAO,CAAC;AACX,mBAAiB,KAAK,YAAY,OAAO;AACrC,UAAM,UAAU,YACV,IAAI,UACJ,+BAA+B,IAAI;AACzC,UAAM,YAAY,IAAI,OAClB,kBAAkB,UAAU,IAAI,IAAI,MAAM,QAAQ,IAAI,IAAI,IAAI,MAAM;AACxE,SAAK,YAAY,GAAG;AAAA,EAAY,cAAc,OAAO;AAAA,EACzD;AAKA,QAAM,UAAU,IAAI,SAAS,OAAO,IAAI,EAAE,+BAAU;AACpD,UAAO,MAAM;AACb,SAAQ,aAAa,OAAO;AAChC;AACA,wBAAwB,iBAAiB;",
  "names": []
}
